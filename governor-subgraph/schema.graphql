enum ProposalStatus {
  CREATED,
  QUEUED,
  EXECUTED,
  CANCELLED,
}

enum ProposalEventType {
  CREATED,
  QUEUED,
  EXECUTED,
  CANCELLED,
  VOTE_CAST,
}

type Account @entity {
  id: Bytes!

  proposals: [Proposal!]! @derivedFrom(field: "proposer")
  votes: [Vote!]! @derivedFrom(field: "voter")
}

type Governor @entity {
  id: Bytes!

  quorumNumerator: BigInt # uint256
  timelock: Bytes # address

  proposals: [Proposal!]! @derivedFrom(field: "governor")
}

type Proposal @entity {
  id: ID!
  proposalId: BigInt! # uint256
  governor: Governor!
  proposer: Account! # address
  targets: [Bytes!]! # address[]
  values: [BigInt!]! # uint256[]
  signatures: [String!]! # string[]
  calldatas: [Bytes!]! # bytes[]
  startBlock: BigInt! # uint256
  endBlock: BigInt! # uint256
  description: String! # string
  createdAt: BigInt!

  status: ProposalStatus!
  votesForCount: BigInt!
  votesAgainstCount: BigInt!

  votes: [Vote!]! @derivedFrom(field: "proposal")
  events: [ProposalEvent!]! @derivedFrom(field: "proposal")
}

type Vote @entity {
  id: ID!
  voter: Account! # address
  proposal: Proposal! # uint256
  createdAt: BigInt!

  support: Boolean!
  weight: BigInt! # uint256
  reason: String! # string
}

type ProposalEvent @entity {
  id: ID!
  type: ProposalEventType!
  proposal: Proposal! # uint256
  from: Account!
  createdAt: BigInt!

  eta: BigInt # uint256

  voter: Account # address
  support: Int # uint8
  weight: BigInt # uint256
  reason: String # string
}

type QuorumNumeratorUpdated @entity {
  id: ID!
  oldQuorumNumerator: BigInt! # uint256
  newQuorumNumerator: BigInt! # uint256
  createdAt: BigInt!
}

type TimelockChange @entity {
  id: ID!
  oldTimelock: Bytes! # address
  newTimelock: Bytes! # address
  createdAt: BigInt!
}
